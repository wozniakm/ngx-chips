{"version":3,"file":"ngx-chips.umd.js.map","sources":["ng://ngx-chips/core/pipes/highlight.pipe.ts","node_modules/tslib/tslib.es6.js","ng://ngx-chips/core/constants/index.ts","ng://ngx-chips/core/providers/drag-provider.ts","ng://ngx-chips/defaults.ts","ng://ngx-chips/core/providers/options-provider.ts","ng://ngx-chips/core/accessor.ts","ng://ngx-chips/core/helpers/listen.ts","ng://ngx-chips/components/tag-input-form/tag-input-form.component.ts","ng://ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ng://ngx-chips/components/tag/tag-ripple.component.ts","ng://ngx-chips/components/tag/tag.component.ts","ng://ngx-chips/components/tag-input/animations.ts","ng://ngx-chips/components/tag-input/tag-input.ts","ng://ngx-chips/components/icon/icon.ts","ng://ngx-chips/tag-input.module.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean,\n    dropping: boolean,\n    index: number | undefined\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        try {\n            return JSON.parse(data) as DraggedTag;\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: {[K in StateProperty]?: State[K]}): void {\n        this.state = {...this.state, ...state};\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: string;\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {AsyncValidatorFn, FormControl, FormGroup, ValidatorFn} from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input') public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({value: '', disabled: this.disabled});\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const {dirty, value, valid} = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n\n            this.inputText = '';\n        }\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        if (this.form.valid) {\n            this.onSubmit.emit($event);\n        }\n    }\n}\n","import {\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Injector,\n    Input,\n    QueryList,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { map, filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { OptionsProvider } from '../../core/providers/options-provider';\nimport { TagInputComponent } from '../tag-input/tag-input';\nimport { TagInputDropdownOptions } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\n\nconst defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\n\n@Component({\n    selector: 'tag-input-dropdown',\n    templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown {\n    /**\n     * @name dropdown\n     */\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n    /**\n     * @name menuTemplate\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name offset\n     */\n    @Input() public offset: string = new defaults().offset;\n\n    /**\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = new defaults().focusFirstElement;\n\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n    @Input() public showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\n\n    /**\n     * @description observable passed as input which populates the autocomplete items\n     * @name autocompleteObservable\n     */\n    @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    @Input() public minimumTextLength = new defaults().minimumTextLength;\n\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n    @Input() public limitItemsTo: number = new defaults().limitItemsTo;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy = new defaults().displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy = new defaults().identifyBy;\n\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = new defaults().appendToBody;\n\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n    @Input() public keepOpen = new defaults().keepOpen;\n\n    /**\n     * @name dynamicUpdate\n     */\n    @Input() public dynamicUpdate = new defaults().dynamicUpdate;\n\n    /**\n    * @name zIndex\n     */\n    @Input() public zIndex = new defaults().zIndex;\n\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n    public items: TagModel[] = [];\n\n    /**\n     * @name tagInput\n     */\n    public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n    /**\n     * @name _autocompleteItems\n     */\n    private _autocompleteItems: TagModel[] = [];\n\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    public set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    @Input() public get autocompleteItems(): TagModel[] {\n        const items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n\n    constructor(private readonly injector: Injector) {}\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n            this.requestAdding(item);\n        });\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n\n        this.tagInput\n            .onTextChange\n            .asObservable()\n            .pipe(\n                debounceTime(DEBOUNCE_TIME),\n                filter((value: string) => {\n                    if (KEEP_OPEN === false) {\n                        return value.length > 0;\n                    }\n\n                    return true;\n                })\n            )\n            .subscribe(this.show);\n    }\n\n    /**\n     * @name updatePosition\n     */\n    public updatePosition(): void {\n        const position = this.tagInput.inputForm.getElementPosition();\n\n        this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n\n    /**\n     * @name isVisible\n     */\n    public get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n\n    /**\n     * @name onHide\n     */\n    public onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n\n    /**\n     * @name onItemClicked\n     */\n    public onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n\n    /**\n     * @name selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name state\n     */\n    public get state(): any {\n        return this.dropdown.menu.state;\n    }\n\n    /**\n     *\n     * @name show\n     */\n    public show = (): void => {\n        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n        const value = this.getFormValue();\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\n        const position = this.calculatePosition();\n        const items = this.getMatchingItems(value);\n        const hasItems = items.length > 0;\n        const isHidden = this.isVisible === false;\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n        const isDisabled = this.tagInput.disable;\n\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n        const shouldHide = this.isVisible && !hasItems;\n\n        if (this.autocompleteObservable && hasMinimumText) {\n            return this.getItemsFromObservable(value);\n        }\n\n        if ((!this.showDropdownIfEmpty && !value) || maxItemsReached || isDisabled) {\n            return this.dropdown.hide();\n        }\n\n        this.setItems(items);\n\n        if (shouldShow) {\n            this.dropdown.show(position);\n        } else if (shouldHide) {\n            this.hide();\n        }\n    }\n\n    /**\n     * @name hide\n     */\n    public hide(): void {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener(): void {\n        if (!this.isVisible || !this.dynamicUpdate) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n\n    /**\n     * @name onWindowBlur\n     */\n    @HostListener('window:blur')\n    public onWindowBlur(): void {\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name getFormValue\n     */\n    private getFormValue(): string {\n        const formValue = this.tagInput.formValue;\n        return formValue ? formValue.toString().trim() : '';\n    }\n\n    /**\n     * @name calculatePosition\n     */\n    private calculatePosition(): ClientRect {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    private requestAdding = async (item: Ng2MenuItem) => {\n        const tag = this.createTagModel(item);\n        await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n    }\n\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    private createTagModel(item: Ng2MenuItem): TagModel {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n\n    /**\n     *\n     * @param value {string}\n     */\n    private getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        const dupesAllowed = this.tagInput.allowDupes;\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const hasValue = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n                const identifyBy = this.tagInput.identifyBy;\n                const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && (hasValue === false);\n        });\n    }\n\n    /**\n     * @name setItems\n     */\n    private setItems(items: TagModel[]): void {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n\n    /**\n     * @name resetItems\n     */\n    private resetItems = (): void => {\n        this.items = [];\n    }\n\n    /**\n     * @name populateItems\n     * @param data\n     */\n    private populateItems(data: any): TagInputDropdown {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        return this;\n    }\n\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    private getItemsFromObservable = (text: string): void => {\n        this.setLoadingState(true);\n\n        const subscribeFn = (data: any[]) => {\n            // hide loading animation\n            this.setLoadingState(false)\n                // add items\n                .populateItems(data);\n\n            this.setItems(this.getMatchingItems(text));\n\n            if (this.items.length) {\n                this.dropdown.show(this.calculatePosition());\n            } else {\n                this.dropdown.hide();\n            }\n        };\n\n        this.autocompleteObservable(text)\n            .pipe(first())\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\n    }\n\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    private setLoadingState(state: boolean): TagInputDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n        \n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state: string = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: \"tag\",\n    templateUrl: \"./tag.template.html\",\n    styleUrls: [\"./tag-component.style.scss\"]\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== \"string\" && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding(\"class.moving\")\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = \"none\";\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple)\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener(\"keydown\", [\"$event\"])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add(\"blink\");\n\n        setTimeout(() => classList.remove(\"blink\"), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === \"string\"\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === \"string\" ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove(\"tag--editing\");\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : \"\";\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate(\"{{ enter }}\", keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate(\"{{ leave }}\", keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit,\n    Type\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first} from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\nimport { OptionsProvider } from '../../core/providers/options-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { TagInputOptions } from '../../defaults';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n\nconst defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\n\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = new defaults().separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = new defaults().placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = new defaults().maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = new defaults().validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = new defaults().errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = new defaults().theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = new defaults().onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = new defaults().inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = new defaults().inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = new defaults().clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = new defaults().hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = new defaults().addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = new defaults().addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = new defaults().pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = new defaults().blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = new defaults().removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = new defaults().editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = new defaults().allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = new defaults().modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = new defaults().trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = new defaults().ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = new defaults().tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = new defaults().disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = new defaults().dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = new defaults().onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = new defaults().onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = new defaults().animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\n\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n                public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({dragging: true, index});\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({dropping: true});\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({tag, index}: {tag: TagModel, index: number}): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    private removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            resolve();\n                        } else {\n                            onValidationError();\n                        }\n                });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => {});\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            this.fireEvents('keydown', event);\n\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: {item: string}) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n\n            return clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n       })\n       .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: {...this.animationDuration}\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n"],"names":["Pipe","Injectable","Input","EventEmitter","FormControl","FormGroup","Component","Output","ViewChild","defaults","forwardRef","first","debounceTime","filter","Injector","Ng2Dropdown","ContentChildren","TemplateRef","HostListener","trigger","state","style","transition","animate","keyframes","ElementRef","Renderer2","ChangeDetectorRef","HostBinding","animations","NG_VALUE_ACCESSOR","tslib_1.__extends","constants.KEYDOWN","constants.KEYUP","map","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT","ContentChild","ViewChildren","NgModule","CommonModule","ReactiveFormsModule","FormsModule","Ng2DropdownModule","COMPOSITION_BUFFER_MODE"],"mappings":"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"}
